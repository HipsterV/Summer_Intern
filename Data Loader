from torch.utils.data import Dataset, DataLoader, random_split

class BeamformerDataset(Dataset):
    def __init__(self, X, C, Y):
        self.X = X
        self.C = C
        self.Y = Y

    def __len__(self):
        return len(self.X)

    def __getitem__(self, idx):
        input_vec = torch.cat([self.X[idx], self.C[idx]], dim=0)
        return input_vec, self.Y[idx]

# Create dataset
dataset = BeamformerDataset(X_tensor, C_tensor, Y_tensor)

# Train/test split
train_len = int(0.8 * len(dataset))
test_len = len(dataset) - train_len

train_set, test_set = random_split(dataset, [train_len, test_len])

# Create DataLoaders
train_loader = DataLoader(train_set, batch_size=64, shuffle=True)
test_loader = DataLoader(test_set, batch_size=64)
